Java é uma linguagem de Programação Orientada a Objetos desenvolvida na década de 90, pela empresa Sun Mycrosystems
e posteriormente sendo adquirida pela Oracle em 2008.

Características do Java
  - Linguagem Interpretada
  - Processo de execução JAVA:
    1- Escrevemos o código fonte <<Programa.java>> com extensão ".java";
    2- Utilizamos o JDK(Java Development Kit) pra compilar o código e gerar o arquivo bytecode (extensão ".class")
    3- Para executar o programa, a JVM(Java Virtual Machine) le o arquivo compilado e as bibliotecas padrões 
       do JAVA que estão no JRE(Java Runtime Environment)
  - A compilação do código se da ainda em tempo de desenvolvimento
  - Compilado para um bytecode que é interpretado por uma Máquina Virtual (JVM)

  - Vantagem de não estar presa a um único SO ou hardware, pois os programas rodam através da VM.

  - OpenJDK LTS(Long Time Support)
  - IDE (Integrated Development Environment) - software que combina ferramentas comuns de desenvolvimento em uma única interface gráfica de usuário (GUI), facilitando o desenvolvimento.

  IDEs Java
    - Eclipse : IDE de desenvolvimento Java, porém suporta outras linguagens. Segue modelo open source.
    - IntelliJ IDEA : IDE de desenvolvimento escrito em Java. Também opera em outras linguagens.Possui versão community e outra versão  licenciada.

Executar arquivo .java pelo cmd
  - navegar ate a pasta onde esta salva a classe
  - execute "javac <<nome_do_programa>>.java" para COMPILAR e gerar o ".class"
  - execute "java <<nome_do_programa>>" , sem extensão, para EXECUTAR o programa propriamente dito.


Eclipse
  - Ctrl + 3 ou Lupa, abre o console de pesquisa
  - Perspective seta a perspectiva de visualização de pastas e arquivos no projeto, adaptado a cada projeto conforme a necessidade.
  - File > new > Java Project, "Ctrl + N" + "java project" -> Cria um novo projeto Java
  - Para criar uma classe, após o projeto ter sido criado, voce pode usar o "Ctrl + N" sobre a pasta "src" e pesquisar "Class"
    marcando logo em seguida as propriedades de classe que voce quer que a nova classe possua. Caso a classe aparça vazia, 
    voce pode digitar "main" dentro da "class" criada e digitar "Ctrl + Espaço" para localizar a propriedade de "static void", "function", etc
  - existem shorthands para JAVA assim como para o JS, por exemplo, ao invés de digitar "System.out.println()", voce pode digitar "sysout + "Ctrl + Espaço"", que ele vai achar a chamada.

  - Para executar , procure o botão verde "run" no menu superior ou no botão direito sobre a classe e "run as java application" 

ATALHOS
  - F2 acima do pacote para alterar o nome do mesmo ou botão direito > refactor > rename
  - para os nomes de pacotes, cada "." indica uma hierarquia de pastas, por exempo "com.dio", o arquivo "dio" ficará na pasta "com".
  - Ctrl + M esconde/ mostra o menu de pastas na esquerda
  - Pra não ter que criar construtor na mão utiliza "Ctrl + 3" e busca "constructor", onde voce define os campos 
  - Pra não ter que criar os gets/sets na mão utiliza "Ctrl + 3" e busca "ggas", onde voce define os campos 
  - o mesmo comando acima serve para o "generate toString()" e o "generate hashCode() and equals()".
    * o "toString()" permite visualizar os dados proporcionados pelo construtor, sem ele voce só consegue acessar o endereço de memória.
  - "Ctrl + D" -> apaga a linha 
  -" Ctrl + Shift + F" -> refatorar código
  - "Ctrl + Shift + O" -> importar Classes Faltantes
  - "Ctrl + Alt + Seta pra baixo" -> clona conteudo selecionado
  - "Ctrl + 1" -> se posicionado sobre a chamada de uma funcao que espera um retorno dentro da main, ele mostra metodos de atribuição para variaveis locais, facilitando a criação.
  - "Ctrl + W" ou "Ctrl + Shift + w" -> Fecha uma ou todas as abas abertas, respectivamente
  - "Ctrl + Shift + C" -> comenta uma ou mais linhas

 - Eclipse não entende uma pasta como parte do projeto no workspace, voce deve importar o folder pelos comnados "File - Import - General - Import existing project into workspace"

GIT E CONTROLE DE VERSÃO
  - Caso o seu projeto seja novo e no possua um repo no github, absta fazer o processo de criar o repo e entao, com o botão direito no projeto no Eclipse > Team > Share Project.
    Aqui voce primeiro deve compartilhar o projeto setando o ".git" gerado no github, para, só então criar o commit e o push, passando usuário e senha.

  - Caso o projeto seja criado dentro de uma pasta que ja possui um git gerado, a IDE ja vai identificar no momento da abertura do mesmo no Eclipse.

DEBUG
  - Scanner (escaneia input para leitura de dados)
  - Definir breakpoints > Debug as > Java Application
  - No menu superior tem as opções "Step Into" , que varre linha a linha atraves do F5 a partir de um breakpoint
  - "Step Over" vai por blocos de código, funções através do F6.
  - Para encontrar classes no projeto digite "Ctrl + Shift + T"

JAVA BUILD PATH
  - botão direito no projeto > Build Path
  - O Build Path é usado para construir seu aplicativo. Ele contém todos os seus arquivos de origem e todas as bibliotecas Java necessárias para compilar o aplicativo.


IntelliJ
  Alt + Insert -> para criar algum componente, tambem serve para adicionar construtor, geter/seter, etc.
  ao invés de digitar "System.out.println()", voce pode digitar "sout" + "Ctrl + Espaço", que ele vai achar a chamada.
  "Ctrl + Shift + F10" -> para buildar e compilar o arquivo, se ja estiver buildado, é só "Shift + F10"
  "Ctrl + Shift + /" -> comenta uma ou mais linhas usando /* */, se quiser comentar linha por linha basta usar "Ctrl + /"]
  "Ctrl + Shift + F" ou "Ctrl + N" -> Para encontrar classes no projeto digite 
  "Alt + Enter" sobre o nome de um Objeto que queira importar ele importa a classe, cria variaveis, etc
  "Ctrl + Alt + O" -> apaga os imports nao utilizados
  "Ctrl + Y" -> Apaga a linha
  "Ctrl + D" -> Duplica o bloco de linhas onde o cursor esta posicionado
  "Shift + F6" -> sobre o nome da classe serve pra refatorar nome
  " Ctrl + Alt + L" -> refatorar código
  " Ctrl + Shift + Setas" -> muda linhas de lugar

  GIT E CONTROLE DE VERSÃO
    Aba VCS > Enable Version Control Integration
    Seleciona o controle de versão, a paritr dai ele ja disponibiliza as opções de repositório (commit, push, etc...)
    "Ctrl + K" -> Abre janela de controle de diff pra dar commit
    Caso seja um repo de um local novo, ele vai pedir pra selecionar o repositorio remoto (URL do github)
    Vai pedir login do Github se for um local novo
    "Ctrl + Shift + K" -> push direto, depois do commit
    "Ctrl + F4" -> Fechar abas

  DEBUG
    "Ctrl + Alt + V" -> atribui retorno de uma função a uma variavel

